# -*- coding: utf-8 -*-
"""code.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uj06yb6JrXgEa5zsbqOWQvny0kv4AXUO
"""

import pandas as pd
import re
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report

# 1. Load the data
train_df = pd.read_csv("/content/train.csv")
valid_df = pd.read_csv("/content/valid.csv")
test_df = pd.read_csv("/content/test.csv")

# 2. Simple preprocessing function
def clean_text(text):
    text = str(text).lower()  # Converting the text to lowercase
    text = re.sub(r"NEWLINE_TOKEN|SDATA_7 :", " ", text)  # Extracting only words and removing punctuations
    text = re.sub(r"[^a-z\s]", "", text)
    return text

# Apply preprocessing
train_df["comment"] = train_df["comment"].apply(clean_text)
valid_df["comment"] = valid_df["comment"].apply(clean_text)
test_df["comment"] = test_df["comment"].apply(clean_text)

# 3. Convert text to TF-IDF vectors
vectorizer = TfidfVectorizer(max_features=5000, stop_words="english")
X_train = vectorizer.fit_transform(train_df["comment"])
X_valid = vectorizer.transform(valid_df["comment"])
X_test = vectorizer.transform(test_df["comment"])
y_train = train_df["toxicity"]
y_valid = valid_df["toxicity"]
# Training model
# 4. Naive Bayes Model (Generative)
nb = MultinomialNB()
nb.fit(X_train, y_train)
nb_preds = nb.predict(X_valid)

# 5. Random Forest Model (Discriminative)
rf = RandomForestClassifier(n_estimators=100, random_state=42)
rf.fit(X_train, y_train)
rf_preds = rf.predict(X_valid)

# 6. Evaluate
print("Naive Bayes:")
print(classification_report(y_valid, nb_preds))

print("Random Forest:")
print(classification_report(y_valid, rf_preds))

# 7. Predict on test set
test_df["out_label_model_Gen"] = nb.predict(X_test)
test_df["out_label_model_Dis"] = rf.predict(X_test)

# 8. Save the result
test_df.to_csv("test.csv", index=False)
print("âœ… test.csv saved with predictions.")

from google.colab import files
files.download("test.csv")

"""# New Section

# New Section
"""